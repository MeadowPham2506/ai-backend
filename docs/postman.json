{
	"info": {
		"_postman_id": "a0b2de94-914a-415c-bc26-4dcb15a2e7dc",
		"name": "AI Backend API",
		"description": "Complete API collection for AI Backend with Products, Users, and Orders endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "2947406"
	},
	"item": [
		{
			"name": "Products",
			"item": [
				{
					"name": "Get All Products",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/products?page=1&limit=10&search=&is_active=true",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number (default: 1)"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Items per page (default: 10)"
								},
								{
									"key": "search",
									"value": "",
									"description": "Search by product name"
								},
								{
									"key": "is_active",
									"value": "true",
									"description": "Filter by active status"
								}
							]
						},
						"description": "Get all products with pagination and filtering options"
					},
					"response": []
				},
				{
					"name": "Get Product by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/products/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"1"
							]
						},
						"description": "Get a specific product by its ID"
					},
					"response": []
				},
				{
					"name": "Create Product",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Sample Product\",\n  \"unit\": \"kg\",\n  \"origin\": \"Vietnam\",\n  \"note\": \"High quality product\",\n  \"is_active\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/products",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							]
						},
						"description": "Create a new product"
					},
					"response": []
				},
				{
					"name": "Update Product",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Updated Product Name\",\n  \"unit\": \"piece\",\n  \"origin\": \"Japan\",\n  \"note\": \"Updated product description\",\n  \"is_active\": false\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/products/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"1"
							]
						},
						"description": "Update an existing product by ID"
					},
					"response": []
				},
				{
					"name": "Delete Product",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/products/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"1"
							]
						},
						"description": "Delete a product by ID"
					},
					"response": []
				}
			],
			"description": "All product-related endpoints for CRUD operations"
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get All Users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/users?page=1&limit=10&search=&sortBy=name&sortOrder=asc",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number (default: 1)"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Items per page (default: 10)"
								},
								{
									"key": "search",
									"value": "",
									"description": "Search by user name"
								},
								{
									"key": "sortBy",
									"value": "name",
									"description": "Sort by field (name, created_at, updated_at)"
								},
								{
									"key": "sortOrder",
									"value": "asc",
									"description": "Sort order (asc, desc)"
								}
							]
						},
						"description": "Get all users with pagination, filtering, and sorting options"
					},
					"response": []
				},
				{
					"name": "Get User by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/users/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"1"
							]
						},
						"description": "Get a specific user by their ID"
					},
					"response": []
				},
				{
					"name": "Create User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"John Doe\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"users"
							]
						},
						"description": "Create a new user"
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Jane Doe\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/users/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"1"
							]
						},
						"description": "Update an existing user by ID"
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/users/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"1"
							]
						},
						"description": "Delete a user by ID"
					},
					"response": []
				}
			],
			"description": "All user-related endpoints for CRUD operations"
		},
		{
			"name": "Orders",
			"item": [
				{
					"name": "Get All Orders",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/orders?page=1&limit=10&user_id=&product_id=&sortBy=created_at&sortOrder=desc&dateFrom=&dateTo=",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"orders"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number (default: 1)"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Items per page (default: 10)"
								},
								{
									"key": "user_id",
									"value": "",
									"description": "Filter by user ID"
								},
								{
									"key": "product_id",
									"value": "",
									"description": "Filter by product ID"
								},
								{
									"key": "sortBy",
									"value": "created_at",
									"description": "Sort by field (quantity, created_at, updated_at)"
								},
								{
									"key": "sortOrder",
									"value": "desc",
									"description": "Sort order (asc, desc)"
								},
								{
									"key": "dateFrom",
									"value": "",
									"description": "Filter orders from date (YYYY-MM-DD)"
								},
								{
									"key": "dateTo",
									"value": "",
									"description": "Filter orders to date (YYYY-MM-DD)"
								}
							]
						},
						"description": "Get all orders with pagination, filtering, and sorting options"
					},
					"response": []
				},
				{
					"name": "Get Order by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/orders/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"orders",
								"1"
							]
						},
						"description": "Get a specific order by its ID"
					},
					"response": []
				},
				{
					"name": "Get Orders by User ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/orders/user/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"orders",
								"user",
								"1"
							]
						},
						"description": "Get all orders for a specific user"
					},
					"response": []
				},
				{
					"name": "Get Orders by Product ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/orders/product/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"orders",
								"product",
								"1"
							]
						},
						"description": "Get all orders for a specific product"
					},
					"response": []
				},
				{
					"name": "Create Order",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user_id\": 1,\n  \"product_id\": 1,\n  \"quantity\": 5,\n  \"purpose\": \"For testing purposes\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/orders",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"orders"
							]
						},
						"description": "Create a new order"
					},
					"response": []
				},
				{
					"name": "Update Order",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user_id\": 2,\n  \"product_id\": 2,\n  \"quantity\": 10,\n  \"purpose\": \"Updated order purpose\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/orders/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"orders",
								"1"
							]
						},
						"description": "Update an existing order by ID"
					},
					"response": []
				},
				{
					"name": "Delete Order",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/orders/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"orders",
								"1"
							]
						},
						"description": "Delete an order by ID"
					},
					"response": []
				}
			],
			"description": "All order-related endpoints for CRUD operations"
		},
		{
			"name": "Health Check",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						""
					]
				},
				"description": "Health check endpoint to verify API status"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080",
			"type": "string",
			"description": "Base URL for the AI Backend API"
		}
	]
}